#!/bin/bash
# packs up mysql databases and directories and push them up to S3

# -- init --
umask 077
AWS_OPTS=("--cli-connect-timeout=10")
for f in "$HOME/.config/s3-backup.cfg" "$HOME/.s3-backup.cfg" "./s3-backup.cfg" "$(dirname "$(readlink -f -- "$0")")/s3-backup.cfg" ; do
	# shellcheck disable=SC1090
	[ -e "$f" ] && source "$f" && break;
done

whisper(){ [ -t 0 ] && echo "$*"; }  # be quiet in cronjobs
die(){ echo >&2 "$1"; exit "${2:-1}"; }

# verify we have the programs we need
_verify_needs(){
	local awsver retval
	retval=0
	if [ -z "$S3BUCKET" ]; then
		echo >&2 "EROR S3BUCKET not set"
		retval=1
	fi
	for i in aws gzip head mysql mysqldump sort; do
		if ! command -v "$i" >/dev/null; then
			echo >&2 "EROR need program: ${i}"
			retval=1
		fi
	done
	[[ $retval == 0 ]] || return $retval
	awsver=$(aws --version)  # aws-cli/2.9.3 Python/3.9.11 Linux/5.15.91-1
	awsver=${awsver%% *} ; awsver=${awsver#*/} ;
	if [ "$( echo -e "$awsver\n1.10" |sort -rV |head -1 )" != "$awsver" ]; then
		echo >&2 "EROR need aws --version >=1.10; saw $awsver"
		retval=1
	fi
	return $retval
}

# which subdir are we uploading these to?
#  AWS S3 expiry policies use the first umpteen characters of an
#  object's name i.e. "anything named s3://bucket/backups_daily/* expire
#  after 8 days"
_build_s3_prefix() {
	local myname path today wday mday
	myname=$(hostname -s)
	path=""	
	today=$(printf '%(%F)T')
	wday=$(( $(printf '%(%u)T') % 7 ))
	mday=$(printf '%(%d)T')
	if [[ "$wday" -eq 0 ]] && [[ "$mday" -lt 8 ]]; then
		path="backups_monthly/$today"
	elif [[ "$wday" == "0" ]]; then
		path="backups_weekly/$today"
	else
		path="backups_daily/$today"
	fi
	echo "$myname/$path"
}


# -- main() --
_verify_needs || exit 1
objprefix="s3://${S3BUCKET}/$(_build_s3_prefix)"
AWS_OPTS+=("--no-paginate" "--output=text" "--color=off")
[ -t 0 ] || AWS_OPTS+=("--quiet")
UPLOADCMD=("aws" "${AWS_OPTS[@]}" "s3" "cp")

if [ -z "${MYSQL_DATABASES[*]}" ]; then
	mapfile -t MYSQL_DATABASES < <(mysql -BN -e 'show databases;' \
	  |grep -vE '^(information_schema|mysql|performance_schema|sys)$')
fi

for dbname in "${MYSQL_DATABASES[@]}"; do
	whisper "Sending $dbname to $objprefix/$dbname.sql.gz"
	mysqldump --skip-comments "$dbname" \
		|gzip -ncf - \
		|"${UPLOADCMD[@]}" - "$objprefix/$dbname.sql.gz"
done
